<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title>virtualguard&#39;s Blog • Posts by &#34;summary&#34; category</title>
        <link>http://blog.virtualguard101.xyz</link>
        <description>&lt;/&gt;</description>
        <language>zh-CN</language>
        <pubDate>Tue, 16 Sep 2025 00:00:00 +0800</pubDate>
        <lastBuildDate>Tue, 16 Sep 2025 00:00:00 +0800</lastBuildDate>
        <category>日常反思</category>
        <category>学年总结</category>
        <category>AI+</category>
        <category>Meetup</category>
        <category>linux</category>
        <category>web开发</category>
        <category>docker</category>
        <item>
            <guid isPermalink="true">http://blog.virtualguard101.xyz/2025/09/16/250916-summary/</guid>
            <title>关于“时间紧，任务重”问题的反思</title>
            <link>http://blog.virtualguard101.xyz/2025/09/16/250916-summary/</link>
            <category>日常反思</category>
            <pubDate>Tue, 16 Sep 2025 00:00:00 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;自2025年9月份起，开始转入新学院、新专业进行学习，&lt;mark&gt;反复出现各种任务（包括但不限于行政任务、学习任务、学业任务）短时间内大量堆积，导致&lt;strong&gt;手忙脚乱，无法冷静思考并高效处理&lt;/strong&gt;的问题&lt;/mark&gt;。典型表现如下：&lt;/p&gt;
&lt;!-- more --&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;头脑思绪很乱，无法静下心来挨个处理单个问题&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;mark&gt;并发任务能力低下，难以在一个时间段内同时处理多个/种事情&lt;/mark&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;高度焦虑，心理负担大&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;缘由分析&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#缘由分析&#34;&gt;&lt;/a&gt; 缘由分析&lt;/h2&gt;
&lt;h3 id=&#34;直接原因&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#直接原因&#34;&gt;&lt;/a&gt; 直接原因&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;转入初期有不少行政交接工作需要完成，同时还需兼顾系统性自学计划的制定、评估以及试运行工作&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;参与了一个跨领域的科研级项目，部分理论知识需要从头开始学起，可支配时间被进一步压缩&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;面临新的人际环境，人际往来极少或完全没有&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;深层原因&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#深层原因&#34;&gt;&lt;/a&gt; 深层原因&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;对学业评估政策了解程度不足&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;抗拒主动交流，&lt;mark&gt;学业、行政信息闭塞&lt;/mark&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;根本原因&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#根本原因&#34;&gt;&lt;/a&gt; 根本原因&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;信息闭塞导致焦虑，焦虑使人难以冷静思考，无法冷静思考也会加剧焦虑问题，陷入恶性循环&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;思维定势导致处世死板，从而无法灵活高效地处理各类问题&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;对未知抱有恐惧&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;解决方法&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#解决方法&#34;&gt;&lt;/a&gt; 解决方法&lt;/h2&gt;
&lt;h3 id=&#34;直接方法&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#直接方法&#34;&gt;&lt;/a&gt; 直接方法&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;放松&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;灵活&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;交流&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;⚠️以及注意身体健康问题&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://blog.virtualguard101.xyz/2025/08/16/cursor-meetup-shanghai/</guid>
            <title>Cursor Meetup ShangHai 要点记录：学生视角下的 AI+ 产品</title>
            <link>http://blog.virtualguard101.xyz/2025/08/16/cursor-meetup-shanghai/</link>
            <category>AI+</category>
            <category>Meetup</category>
            <pubDate>Sat, 16 Aug 2025 14:00:00 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;&lt;strong&gt;在朋友的邀请下参加了8月16号在上海浦东软件园举行的 Cursor Meetup，对朋友现场记录的内容以及我的个人提问做一个整理，同时站在计算机专业在校大学生视角简单记录一下当前的看法&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;整个 Meetup 的流程持续了一整个下午，分上下两场，个人感觉上半场更倾向于实际应用场景的“踩坑”分享，而下半场则更倾向于方法论的解析。&lt;/p&gt;
&lt;p&gt;站在学生视角，前半场的实际应用场景我个人基本无法很好消化，毕竟还没有参与工作，没有这样的环境与条件去感受这一方面的内容；但方法论模块的分享对于当前的我们来说还是很有参考价值的，无论是我的朋友（医学生）还是我（CSer），特别是针对未来大概率要进入这个行业的我而言。&lt;/p&gt;
&lt;p&gt;现场绝大多数的与会者都已经参与工作，其中也不乏各单位中的技术领头羊，这也给了迷茫的我提问的机会。&lt;/p&gt;
&lt;!-- more --&gt;
&lt;p&gt;活动议程如下图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/Y9YnmBu.jpeg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h2 id=&#34;kiro-ide简介及新一代ai编程方案&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#kiro-ide简介及新一代ai编程方案&#34;&gt;&lt;/a&gt; Kiro IDE简介及新一代AI编程方案&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;Calvin | AWS Startup&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;纯AI有不编程少问题，解决方案&lt;br /&gt;
规范驱动的开发 : Spec Mode&lt;/p&gt;
&lt;p&gt;示例：Kiro IDE&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Spec Mode ： 先写规范再编码&lt;/li&gt;
&lt;li&gt;Agent Hook： 比如保存文件的时候调用AI检查代码&lt;/li&gt;
&lt;li&gt;Vibe： 互动问答为核心&lt;/li&gt;
&lt;li&gt;Spec：严格按照软件工程的需求&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;v0-cursor-实战开发&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#v0-cursor-实战开发&#34;&gt;&lt;/a&gt; v0 + cursor 实战开发&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;陆彦达 | 飞书深诺研发总监&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;借助V0快速完成原型开发，对其需求即可&lt;/p&gt;
&lt;p&gt;把原型丢给前端和Cursor，让cursor补全&lt;/p&gt;
&lt;p&gt;再让cursor生成配套后端（比如swagger）&lt;/p&gt;
&lt;p&gt;Cursor不是很适合超大项目和上古项目，但很适合简单项目/中小型项目从零开始开发&lt;/p&gt;
&lt;p&gt;架构的设计以及rule很重要&lt;/p&gt;
&lt;!-- 
!!! question
    我不是专业开发者，之前用Cursor等AI工具做过一些玩具，但是我让Cursor写了一个原型之后，想要重构的时候发现代码经常会相当混乱，让Cursor自己改，可能也会出现前改后忘这类的情况（比如我要重构一个函数，Cursor写了一个新的函数，调用老函数再做一些额外处理），此类情况有什么对策

    我不是专业开发者，之前用Cursor等AI工具做过一些玩具，我让Cursor做一个原型，一路点点点确实做出了要的效果，但是这时候代码就变得复杂的超出了我的理解能力，就让我的重构比较难受
 --&gt;
&lt;p&gt;Cursor的开发 轻逻辑轻算法，重顶层和架构设计&lt;/p&gt;
&lt;p&gt;效果 Python, Typescript &amp;gt; Java&lt;/p&gt;
&lt;h2 id=&#34;cursor-memories&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#cursor-memories&#34;&gt;&lt;/a&gt; Cursor Memories&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;好记星 | 前得物增长前端负责人&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;记忆本身就是一种规则&lt;/p&gt;
&lt;p&gt;索引的记忆数量有限制(最新100条)&lt;/p&gt;
&lt;p&gt;未来的策略：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;增加一个找回策略&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;团队协作&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;记忆其实就是用户对于项目/仓库的认知&lt;/p&gt;
&lt;p&gt;最佳实践：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;可保存的记忆：记住我是医学生/开源爱好者/见习开发者&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;用户洞察：根据聊天记录提取记忆&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;聊天记录会议：我们之前聊过这个事情&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;有意思的Cursor插件：Spec Story&lt;/p&gt;
&lt;h2 id=&#34;mcp&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#mcp&#34;&gt;&lt;/a&gt; MCP&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;孟健 | AI 畅销书作者&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;感觉就是通用的Function Call协议，主要价值是标准化&lt;/p&gt;
&lt;p&gt;MCP暂时还在早期阶段，未来是Agent to Agent(A2A)协议&lt;/p&gt;
&lt;p&gt;国内MCP的生态发展一般，正在努力发展的生态 ：&lt;a href=&#34;https://www.mcp-cn.com/&#34;&gt;MCP Hub&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Claude Code 团队：AI Coding将来会覆盖90%+的编码场景&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Agent编程，提示词要精准，方便AI理解的，所以说AI无法抢走你的工作🤓&lt;/p&gt;
&lt;p&gt;什么服务可以MCP化：AI本来是缺少这个能力的，要接入外部工具提升能力。有缺口就可以用MCP补全&lt;/p&gt;
&lt;h2 id=&#34;如何用ai开发出-github-43k的产品&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#如何用ai开发出-github-43k的产品&#34;&gt;&lt;/a&gt; 🤩如何用AI开发出 Github 4.3k的产品&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/zqTVwll.jpeg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/pftom&#34;&gt;黄巍/Tom Huang&lt;/a&gt; | &lt;a href=&#34;https://github.com/refly-ai/refly&#34;&gt;Refly&lt;/a&gt; AI Founder &amp;amp; CEO&lt;/p&gt;
&lt;p&gt;针对一个在校大学生兼 &lt;s&gt;开源社区混子&lt;/s&gt; 开源爱好者的&lt;strong&gt;我们&lt;/strong&gt;来说，这很有用！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;方法论分享&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#方法论分享&#34;&gt;&lt;/a&gt; 方法论分享&lt;/h3&gt;
&lt;p&gt;Refly AI :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;两周完成上线&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;生产级别可用&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;4.3k star&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;早于Notebook LM 约 3-5个月&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;一些阶段：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;洪荒时代&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;忽然有一天发现所有代码都可以用AI来写了（产品经理活的最滋润的一集）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Coding Agent加速 (Codeium -&amp;gt; Windsurf)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Coding Agent像水电一样平常后，会发生什么&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;做产品不能闭门造车&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;AI+ Dev&lt;/strong&gt;对Starup和大厂差距的影响：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;信息差&lt;/strong&gt;：AI 搜索 -&amp;gt; 抹平信息差&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;开发速度&lt;/strong&gt;：AI Coding -&amp;gt; 代码补全时代&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;极致的生产力使得初创公司也能具有挑战百度自由画布的底气，可以&lt;strong&gt;说干就干&lt;/strong&gt;&lt;/p&gt;
&lt;!-- &gt; 吐槽百度：出了名的想法超前，执行力拉胯 --&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;技术实现边际成本为 0 后，如何做选择，或者说『品味』就变得尤为重要&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;AI产品的价值：不仅可以帮你完成工作，还可能让你充满信心——不仅仅局限于Coding，也可以是你的生活与工作伙伴。&lt;/p&gt;
&lt;p&gt;产品选择：不要攻打别人的腹地，看看产品之间有什么可用的空隙你可以参与&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/zTYrumE.jpeg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;h3 id=&#34;个人提问&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#个人提问&#34;&gt;&lt;/a&gt; 个人提问&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;作为一个近期遭遇学习瓶颈（主要体现在基础学习、方向选择上）的在校大学生，&lt;strong&gt;我&lt;/strong&gt;深感焦虑，我参与此次 Meetup 的目的更多的也是想了解一些&lt;strong&gt;AIGC/AI+&lt;strong&gt;对当前计算机行业&lt;/strong&gt;生产方式&lt;/strong&gt;发展趋势的影响，以更好地思考近期的规划同时抉择自己的钻研方向&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;以下对话为个人要点回顾，与实际对话可能有所差异&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Q&lt;/strong&gt; (&lt;em&gt;virtualguard101&lt;/em&gt;):&lt;/p&gt;
&lt;p&gt;在刚刚的分享中，您提到了 AI+ 产品能够使得研发进程具备极致的生产效率，那么作为一个已经参与工作的开发者，您认为计算机基础知识的学习还有必要吗？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;A&lt;/strong&gt; (&lt;em&gt;Tom Huang&lt;/em&gt;):&lt;/p&gt;
&lt;p&gt;还是有必要的，至少大学校园中提供的基础课程还是需要掌握的。&lt;strong&gt;AI+ 产品只是一个生产工具&lt;/strong&gt;，扎实的理论基础才能够使得你具备高效利用它的能力，根据马斯克曾提到的&lt;a href=&#34;https://www.mbachina.com/html/FMBA2012/202202/412585.html&#34;&gt;第一性原理&lt;/a&gt;也不难得出这个结论。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Q&lt;/strong&gt; (&lt;em&gt;virtualguard101&lt;/em&gt;):&lt;/p&gt;
&lt;p&gt;假设我的主攻方向是 DevOps，我的工作有可能被AI+取代吗？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;A&lt;/strong&gt; (&lt;em&gt;Tom Huang&lt;/em&gt;):&lt;/p&gt;
&lt;p&gt;&lt;s&gt;好像还真有可能😂&lt;/s&gt;，不过要知道，AI 的底层是一个概率模型，概率模型最大的特点就是具有&lt;strong&gt;不稳定性&lt;/strong&gt;，因此在对稳定性或高精度的任务中，AI 就很难发挥主导作用了——举个例子：在今天的分享中，不难发现当前 AI 在前端开发中的应用程度要比其他领域（如后端）高出不少，这就是因为前端的产品可预览、容错度高，且比较容易发现问题；假设我们将场景切换到后端开发、服务器开发、DevOps等综合度较高的场景，一个小小的错误就有可能使得整个系统崩溃，那么这时 AI 能发挥的作用就非常有限了，还是需要人工不断地改进系统。这时能否更加高效地利用 AI+ &lt;strong&gt;工具&lt;/strong&gt;来处理业务需求或解决各式各样的运维问题就是区分普通运维与“新时代”运维的一个重要指标了。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Q&lt;/strong&gt; (&lt;em&gt;virtualguard101&lt;/em&gt;):&lt;/p&gt;
&lt;p&gt;当前 AI 领域的快速发展与迭代，使得我时常陷入类似于“我当前的学习是否还具有实际意义”等问题的思考，导致我十分迷茫与焦虑，有什么办法能缓解这种情况吗？&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;A&lt;/strong&gt; (&lt;em&gt;Tom Huang&lt;/em&gt;):&lt;/p&gt;
&lt;p&gt;在学习的过程中伴随一些&lt;strong&gt;产出&lt;/strong&gt;，不论这个产出的形式、托管平台等要素，只要它具有实际意义，那么就能很大程度上缓解你的焦虑——另外如果你的产出能被他人所认可，我想这也会使你产生极大的慰藉（作为一个开源爱好者，这点我是真的感同身受）；同时，回到刚刚说的 AI+ 产品也可以在这个过程中为你提供很多帮助，包括但不限于帮助你掌握扎实的基础理论，即 作为你的一个&lt;strong&gt;学习与生活的伙伴&lt;/strong&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;ai时代的个人战略&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#ai时代的个人战略&#34;&gt;&lt;/a&gt; ⭐AI时代的个人战略&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;魏知 | 金融科技公司 AI 企业转型项目负责人&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;这一模块我的朋友没有记录，同时我自己也没有认真听，但作为未来要踏入这个行业的“准社畜”而言，我认为这个模块分享的方法论对我而言还是挺有参考价值的，故将在现场拍摄的照片列出以供回顾&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/WX5HG9Y.jpeg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/rvZyPF8.jpeg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/3xrTVmB.jpeg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/n6rFOO4.jpeg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/wgHTSAP.jpeg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/ToyH1Ma.jpeg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;在当前发展阶段，大多数企业还处于&lt;strong&gt;第一阶段&lt;/strong&gt;，部分头部企业已经发展至&lt;strong&gt;第二阶段&lt;/strong&gt;，但还没有人敢说自己的企业已经发展至&lt;strong&gt;第三阶段&lt;/strong&gt;。&lt;/p&gt;
&lt;h2 id=&#34;qa&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#qa&#34;&gt;&lt;/a&gt; Q&amp;amp;A&lt;/h2&gt;
&lt;p&gt;防幻觉的rule：&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;attr&#34;&gt;confidence&lt;/span&gt;:int&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; confidence &amp;gt;= &lt;span class=&#34;number&#34;&gt;95&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;title function_&#34;&gt;answer&lt;/span&gt;()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;attr&#34;&gt;else&lt;/span&gt;: ask-me-&lt;span class=&#34;title function_&#34;&gt;questions&lt;/span&gt;()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;把大的任务分解为sub tasks&lt;/p&gt;
&lt;p&gt;避免Vibe debug异常痛苦🤣&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;定一个清晰的需求&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;对于大的需求，设置一个好的rules，让AI按模块开发&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Spec-mode防止效果和需求便宜过大&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;init的时候写一些 basic rules： 基本的代码风格，模块设置等&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;debug workflow:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;讨论&lt;/strong&gt;：做了什么- 期待结果- 实际结果- 一些日志，报错等&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;规划&lt;/strong&gt;：要如何处理这些问题&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Action&lt;/strong&gt;：让AI写&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;相当于「AI 结对编程」，而不是「老板甩给员工 debug」&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;及时删除冗余代码&lt;/p&gt;
&lt;p&gt;一个问题一个问题解决，不要设定过于宏大的任务&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">http://blog.virtualguard101.xyz/2025/06/20/2024-2025summary/</guid>
            <title>2024-2025：艰难的起步</title>
            <link>http://blog.virtualguard101.xyz/2025/06/20/2024-2025summary/</link>
            <category>学年总结</category>
            <pubDate>Fri, 20 Jun 2025 21:10:33 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;&lt;strong&gt;对CS自学之路的第一年，也是大学生活的第一年的一个简单复盘&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在大学的第一年——也是正式开始CS自学旅途的第一年（周年）随着暑假的临近也就快要结束了，是时候乘着 &lt;s&gt;期末复习&lt;/s&gt; 休闲的时间写一下这个学年的学年总结与复盘了。&lt;/p&gt;
&lt;p&gt;事实上，对于这个学年的成果我个人并不满意，但也正因如此，才需要通过客观、辨证的总结来修正错误的方法与方向。&lt;/p&gt;
&lt;!-- more --&gt;
&lt;h2 id=&#34;做了什么&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#做了什么&#34;&gt;&lt;/a&gt; 做了什么&lt;/h2&gt;
&lt;p&gt;似乎做了很多，又似乎什么都没做…🙃至于为什么，后面再分析。&lt;/p&gt;
&lt;h3 id=&#34;暑假&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#暑假&#34;&gt;&lt;/a&gt; 暑假&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;第一台个人计算机💻&lt;/p&gt;
&lt;p&gt;拿到第一台个人💻（家里的电脑基本不让我动，而且其本身基本也成为&lt;strong&gt;赛博养蛊&lt;/strong&gt;的载体了）的第一件事就是下 &lt;s&gt;steam&lt;/s&gt; &lt;strong&gt;vscode&lt;/strong&gt;，之前在高中的时候在班级的多媒体设备上不知道为什么“下不了”，好不容易下好了发现不会配环境😅；&lt;/p&gt;
&lt;p&gt;同时因为某些不明原因，班级里有些人似乎对我使用“公共设施”学习抱有意见——明明特地挑了不会影响他们的时间与方式，而且我个人也是管理多媒体设备的班干部。也不知道是不是他们觉得我在装X…&lt;s&gt;现在想想，当时的脸皮还是太薄了&lt;/s&gt;&lt;/p&gt;
&lt;p&gt;不小心说了点废话，总的来说，我在拿到这台电脑前几乎是没有任何渠道可以自学CS的，因此当时的心情是十分激动的，这台电脑几乎就是我最初的学习CS的工具。至于“为什么不看书”、“不会手写代码吗”这类言辞相信应该不会从能看到这篇文章的人嘴里说出；而且我真的去看了，举一个最典型的例子：我永远也不会忘记当时作为一个毫无CS基础的白痴，翻开&lt;a href=&#34;https://csappbook.blogspot.com/&#34;&gt;这本书&lt;/a&gt;后我的反应😅。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;自学了C语言的基础&lt;/p&gt;
&lt;p&gt;这几乎占据了我暑假里80%的个人时间，所以我暑假期间直到8月底快要入学了都没有离开我从小生活的县城。&lt;/p&gt;
&lt;p&gt;虽然但是，我是&lt;strong&gt;花钱&lt;/strong&gt;看的网上所谓的培训班学的，这里就不展开了。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在一位福大信息安全的朋友的帮助下初步了解了科学上网🪜的方法&lt;/p&gt;
&lt;p&gt;这个虽然不起眼，但是十分重要，可以说是改变我获取资源的途径的基础，只不过当时没意识到&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;上学期&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#上学期&#34;&gt;&lt;/a&gt; 上学期&lt;/h3&gt;
&lt;p&gt;这是在大学的第一个学期，主要以信息收集为主，同时兼顾学业以争取转专业名额。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;了解在大学中计算机“破局”主要的三个方向：&lt;strong&gt;项目&lt;/strong&gt;、&lt;strong&gt;竞赛&lt;/strong&gt;、&lt;strong&gt;科研&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;结识了许多校内计算机方向的大佬与老师，主要是技术/安全协会的学长学姐与安全方向的同届同学&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在大佬与老师的引导与帮助下彻底放弃了“跟班”式的学习方式&lt;/p&gt;
&lt;p&gt;说起来也有点意思，暑假报的那个培训班我在入学后不久就退款了，原因有二：一是与我当时感兴趣的方向（安全）不太一致；二是我发现里面所谓的指导老师似乎对于计算机行业的认知还不如我，负责技术指导的老师更是 &lt;s&gt;人机&lt;/s&gt; 连工具都不会用。举个最难绷的例子，我用vscode（众所周知，vscode本身是文本编辑器而不是IED）时碰到了一个最简单的配置问题，甚至都不需要修改配置文件，他上来就让我把编辑器换成他们教学指定的IDE，而我在搜索了资料后发现就是环境变量的问题…更搞笑的是我是在他们课程的宣传广告或着叫&lt;strong&gt;公开课&lt;/strong&gt;上的某个视频还是评论找到解决方案的🤣。不过好在人家最起码不是诈骗，退款还是可以退的，但还是赔了亿点点（因为看了一点课）。&lt;/p&gt;
&lt;p&gt;后面我在参与学校与某个企业联合举办的竞赛时又双叒叕被推送了他们自己的培训方案，这一次我是差点就交了近3万的培训费去学所谓的“网络工程”，当初对网络安全很感兴趣，头脑发热就去问了，好在最后被某个大佬和老师拦下了。这次也不是没有收获，除了彻底抛弃了“跟班”思维，决定自己独立定制我个人的&lt;strong&gt;培养方案&lt;/strong&gt;，也认识了 &lt;code&gt;Cyber Security&lt;/code&gt; 与 &lt;code&gt;Network Security&lt;/code&gt;的区别（虽然不敢讲全部，但他在所谓的竞赛培训上讲的内容，除了&lt;strong&gt;思科模拟器&lt;/strong&gt;的使用，其他内容我基本有一定的了解）&lt;/p&gt;
&lt;p&gt;总而言之，从这里开始，我的&lt;strong&gt;CS自学之路&lt;/strong&gt;或许才真正意义上称得上是&lt;strong&gt;入门与起步&lt;/strong&gt;。乐观的讲，至少没有中道崩殂吧…🙃&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;与网安同届的同学组队打了几次CTF线上赛&lt;/p&gt;
&lt;p&gt;虽然都是一些小比赛，外加压根就没什么水平，所以挺水的，不过也结识了网安的朋友，同时由于我们学校对这方面不太重视，CTF鲜为人知（甚至连前面提到的安全协会都是基本只有网安专业的同学知道），为后续转专业提升了个人竞争力。&lt;/p&gt;
&lt;p&gt;社会工程学魅力时刻了属于是😁&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;翻出了在网页收藏夹中积灰已久的&lt;a href=&#34;https://csdiy.wiki/&#34;&gt;csdiy&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在整理网站资源的时候发现了早在高中时朋友就推荐的&lt;a href=&#34;https://csdiy.wiki/&#34;&gt;CS自学指南&lt;/a&gt;，当时因为&lt;strong&gt;没有科学上网工具&lt;/strong&gt;打不开，但多少知道这是个宝藏，然而这时已经临近上学期期末了（你猜我前面为什么说我没意识到&lt;em&gt;科学上网是改变我获取资源的途径的基础&lt;/em&gt;），也就是说我“浪费”了近一个学期的时间走了CS自学的“第一条弯路”，是的，这只是第一条🙃。&lt;/p&gt;
&lt;p&gt;还有一点忘了说，在再次发掘出这个宝藏前、放弃“跟班”式学习后，我的自学几乎依靠形如&lt;a href=&#34;https://www.runoob.com/&#34;&gt;菜鸟教程&lt;/a&gt;的&lt;strong&gt;文档式教程&lt;/strong&gt;。至于我对文档式教程的看法，我个人认为其更适合用于&lt;strong&gt;快速参考&lt;/strong&gt;或某些技术栈的&lt;strong&gt;入门速通&lt;/strong&gt;，不建议在深入学习时依赖——&lt;strong&gt;文档之所以被称之文档就是因为其“仅供参考”&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;使用积蓄购买了第二台💻&lt;/p&gt;
&lt;p&gt;这是一个艰难但在我看来正确的一个决定。冒着被扣上“乱花钱”帽子的风险，主要还是为了一劳永逸地解决我一直以来头痛的续航问题，但出乎意料的，这台轻薄本（我给其编号为&lt;code&gt;PC1&lt;/code&gt;，第一台自然就是&lt;code&gt;PC0&lt;/code&gt;）对于生产环境的兼容性似乎远超&lt;code&gt;PC0&lt;/code&gt;，这解决了另一个使我头痛的问题——&lt;code&gt;PC0&lt;/code&gt;上一些困扰了我很久的兼容性问题；日常的使用体验也是如此，也不知道是不是因为&lt;code&gt;PC0&lt;/code&gt;是我的第一台个人电脑，我没正确维护导致的兼容性问题。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;寒假&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#寒假&#34;&gt;&lt;/a&gt; 寒假&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;速通&lt;a href=&#34;https://csdiy.wiki/%E7%BC%96%E7%A8%8B%E5%85%A5%E9%97%A8/MIT-Missing-Semester/&#34;&gt;MIT Missing Semester&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;对于里面大部分内容的&lt;strong&gt;基础操作&lt;/strong&gt;在上学期的“弯路”中多少有点了解，如Git、Shell等。可惜的是我并没有静下心来完善进阶部分，这个问题实际贯穿了整个学年的学习，后面会做分析。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;开始使用Linux操作系统&lt;/p&gt;
&lt;p&gt;这也可以算得上是一个重要的节点。起因是我在学习&lt;a href=&#34;https://csdiy.wiki/%E7%BC%96%E7%A8%8B%E5%85%A5%E9%97%A8/MIT-Missing-Semester/&#34;&gt;MIT Missing Semester&lt;/a&gt;时，本意是使用VM来学习Shell，然后就碰到了该死的 “没有正确卸载VM” 导致的一系列问题（历史遗留问题.jpg）。在给&lt;code&gt;PC0&lt;/code&gt;几次重置重装系统无果后，一怒之下，我就看着网上的教程和资料给&lt;code&gt;PC1&lt;/code&gt;（&lt;code&gt;PC1&lt;/code&gt;的Win11对VM的兼容性也不好）装了双系统（Ubuntu22.04 + Win11）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;自学&lt;a href=&#34;https://csdiy.wiki/%E7%BC%96%E7%A8%8B%E5%85%A5%E9%97%A8/Python/CS61A/&#34;&gt;CS61A&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;这可以称得上是“斯大林格勒”了（好吧其实没那么夸张），看这门课时我和&lt;a href=&#34;https://csdiy.wiki/#cs61a&#34;&gt;csdiy第一贡献者的感想&lt;/a&gt;是一致的。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;下学期&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#下学期&#34;&gt;&lt;/a&gt; 下学期&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;创建了自己的第一个独立项目——基于&lt;a href=&#34;https://csdiy.wiki/%E7%BC%96%E7%A8%8B%E5%85%A5%E9%97%A8/3Python/CS61A/&#34;&gt;CS61A&lt;/a&gt;的学习用py手搓了一个简陋的&lt;a href=&#34;https://github.com/virtualguard101/space-calculator&#34;&gt;立体几何计算器&lt;/a&gt;（简陋到甚至都不支持曲线与曲面）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在导师的邀请下开始试图参考网上&lt;a href=&#34;https://zhuanlan.zhihu.com/p/714400366?utm_psn=1883987006549374851&#34;&gt;大佬的项目&lt;/a&gt;使用FPGA来&lt;a href=&#34;https://projects.virtualguard101.xyz/posts/gpu-researching-log/&#34;&gt;“手搓GPU”&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;可惜我对硬件方面确实没有太大的兴趣，加上缺少这方面的基础与我对自身学习进度的认知偏差，导致我在一些不必要的地方“浪费”了很多时间。因此这个项目在现阶段而言对我的帮助我个人认为十分有限。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;5月份&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#5月份&#34;&gt;&lt;/a&gt; 5月份&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;构建了自己的&lt;a href=&#34;https://virtualguard101.xyz/&#34;&gt;第一个个人站点&lt;/a&gt;（这个才是真正的“斯大林格勒”）&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/euiV0r7.jpeg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;站点背景图片来源：&lt;a href=&#34;https://b23.tv/7vno0Mx&#34;&gt;为生而战，向死而生 | 何春秋-宙道分身&lt;/a&gt;（图片作了分辨率处理），已获得作者授权：&lt;img src=&#34;https://i.imgur.com/CMNtFos.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;在正式踏上自学之路后不久，我一直在探索能够高效整合信息/资源（人话：记笔记）的方式，特别是在五月份受导师邀请开始“手搓GPU”后，单位时间里需要接收的信息量越来越多，脑子里能留住的有效信息却越来越少。最后思来想去还是发现&lt;strong&gt;使用&lt;code&gt;CI/CD&lt;/code&gt;工具链构建的个人站点&lt;/strong&gt;最合适。&lt;/p&gt;
&lt;p&gt;这里要特别感谢学校技术协会的大佬，对站点建设提供了一系列相对现代化的构建建议。&lt;/p&gt;
&lt;p&gt;建站后在协调大量信息的存储与分类时我也遇到了不少麻烦，包括但不限于如何选取合适的主题/文档构建工具来使博客更加美观且实用；哪些构建工具/框架适合用于笔记以使其能够被高效地回顾、查阅等，这些我们&lt;a href=&#34;#%E7%AB%99%E7%82%B9%E6%9E%84%E5%BB%BA%E5%B7%A5%E5%85%B7%E4%B8%8E%E4%B8%BB%E9%A2%98%E7%9A%84%E9%80%89%E6%8B%A9&#34;&gt;后面&lt;/a&gt;再谈&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;自学&lt;a href=&#34;https://csdiy.wiki/%E7%BC%96%E7%A8%8B%E5%85%A5%E9%97%A8/cpp/CS106L/&#34;&gt;CS106L&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;这是建设了个人站点后的第一个具有&lt;a href=&#34;https://note.virtualguard101.xyz/notes/Programming%20Language/c%2B%2B/C%2B%2B%20Fundamental/00-type-structure/&#34;&gt;相对完善笔记&lt;/a&gt;的自学课程，我快速过了一下，其中大部分的&lt;a href=&#34;https://github.com/virtualguard101/cs106l-assignments&#34;&gt;Assignments&lt;/a&gt;还没来得及做。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;开始使用Arch Linux作为主操作系统&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/oVkMHug.jpeg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;s&gt;因为我是南梁&lt;/s&gt;&lt;/p&gt;
&lt;p&gt;使用了近半年的Ubuntu，终于还是对Arch动心了。&lt;a href=&#34;https://blog.virtualguard101.xyz/2025/05/19/arch-linux/&#34;&gt;这篇文章&lt;/a&gt;记录了一些我在安装过程遇到的一些要点与问题。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;创建项目&lt;a href=&#34;https://github.com/virtualguard101/3BodySimulator&#34;&gt;3BodySimulator&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;这是我个人为学习C++项目构建与管理而创建的&lt;strong&gt;案例式项目&lt;/strong&gt;，学习的知识主要聚焦于cpp项目的构建流程与&lt;a href=&#34;https://note.virtualguard101.xyz/notes/tools/Build%20Tools/cmake/&#34;&gt;CMake等工具的使用&lt;/a&gt;，代码逻辑的所有内容以及项目架构的部分内容由AI代为完成。&lt;/p&gt;
&lt;p&gt;按照惯例（自从有个人站点后，我有随手为自己的项目写文档的习惯，特别是用于学习的项目），我也为此写了一篇&lt;a href=&#34;https://blog.virtualguard101.xyz/2025/05/23/3BodySimulator/&#34;&gt;解构文档&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;转专业拟接收名单公示，不出意外的话就是成功转入网络空间安全了&lt;/p&gt;
&lt;p&gt;转入网安主要还是因为我们学校这个专业后期课程量相对较少，算是为未来的自己争取到了一点时间吧&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;6月份&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#6月份&#34;&gt;&lt;/a&gt; 6月份&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;进一步完善了&lt;a href=&#34;https://note.virtualguard101.xyz/notes/tools/git/&#34;&gt;Git的学习&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;说的难听一点，对于Git在此之前我可能只会“三板斧（&lt;code&gt;add&lt;/code&gt;、&lt;code&gt;commit&lt;/code&gt;、&lt;code&gt;push&lt;/code&gt;）”&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;基本明确自己的努力方向——围绕自动化与云原生；目标岗位基本明确为后端开发、服务器开发、自动化类岗位（构建开发、测试开发等）三者或类似岗位&lt;/p&gt;
&lt;p&gt;这也是一个看起来并不起眼但却十分重要的一个节点，它标志着我一年以来“内耗式”学习的终结，其中问题与经验我们后面再谈&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;问题所在&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#问题所在&#34;&gt;&lt;/a&gt; 问题所在&lt;/h2&gt;
&lt;p&gt;是时候进入最为重要的&lt;strong&gt;问题总结&lt;/strong&gt;与&lt;strong&gt;纠错&lt;/strong&gt;环节了，错误本身并不可怕——可怕的是缺乏面对错误的勇气与意识&lt;/p&gt;
&lt;h3 id=&#34;学习方面&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#学习方面&#34;&gt;&lt;/a&gt; 学习方面&lt;/h3&gt;
&lt;h4 id=&#34;一系列左倾错误导致的连锁反应&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#一系列左倾错误导致的连锁反应&#34;&gt;&lt;/a&gt; 一系列“左倾”错误导致的连锁反应&lt;/h4&gt;
&lt;blockquote&gt;
&lt;p&gt;这是一个&lt;strong&gt;系列问题&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;由于是系列问题导致的连锁反应，以一种&lt;strong&gt;自顶向下&lt;/strong&gt;的方式来分析问题就会稍微方便且清晰。下面的流程图将问题之间以及问题与其导致的后果以&lt;strong&gt;图&lt;/strong&gt;的形式从实际问题中&lt;strong&gt;抽象&lt;/strong&gt;出来，以便后续的分析与解决（本来想用&lt;a href=&#34;https://mermaid.js.org/intro/&#34;&gt;mermaid&lt;/a&gt;的，但写了半天发现渲染不出来，最后用的文档扫描转图片）：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/xbuGDDR.jpeg&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;
&lt;p&gt;图中的分析虽然不尽完美，但已经把一年以来最为主要与急需解决的问题以一种抽象的方式总结出来了（毕竟这是我第一次采用这种分析法分析问题）&lt;/p&gt;
&lt;p&gt;外因的情况较为特殊，同时其对自学的影响已经不再是实质上的影响了，这里简要说明&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;外因（环境因素）&lt;/p&gt;
&lt;p&gt;在暑假和上学期，我的&lt;strong&gt;独立自主&lt;/strong&gt;学习意识十分薄弱——这里的“独立自主”不单指&lt;strong&gt;学习积极性&lt;/strong&gt;，还包括对&lt;strong&gt;信息收集能力&lt;/strong&gt;、&lt;strong&gt;自主规划能力&lt;/strong&gt;、&lt;strong&gt;信息整合分析能力&lt;/strong&gt;的重视度。如果单单只有满腔热血，在当今互联网信息良莠不齐的时代这一点反倒更有可能成为自学时致命的缺点，在网络广告的诱导下差点陷入“跟班”式学习（那就不叫自学了）的陷阱就是一个再好不过的例子。然而这种能力似乎真的看个人——或者说需要时间沉淀；同时，国内的计算机教育与网络环境懂的都懂，下面两张截图的对比（前后分别是同一搜索对象，&lt;strong&gt;未使用科学上网工具、国内版edge的搜索结果&lt;/strong&gt;与&lt;strong&gt;开启了科学上网工具、chrome的搜索结果&lt;/strong&gt;）就是一个例子：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/EMEvQ2c.jpeg&#34; alt=&#34;未使用科学上网工具、国内版edge的搜索结果&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://i.imgur.com/m4yxp37.jpeg&#34; alt=&#34;开启了科学上网工具、chrome的搜索结果&#34; /&gt;&lt;/p&gt;
&lt;p&gt;或许是因为在高考结束前压根就没有自学计算机的环境，导致我刚开始时一直在&lt;strong&gt;试错&lt;/strong&gt;与&lt;strong&gt;走弯路&lt;/strong&gt;；虽说在高考前我在朋友的帮助下对计算机的行业信息与国内的本科教育现状（特别是计算机方向）已经有了初步的了解，但说实话，真的只是&lt;strong&gt;冰山一角&lt;/strong&gt;，一方面缺少&lt;strong&gt;科学上网&lt;/strong&gt;工具，另一方面没有那种明确目标的意识，二者在CS的学习中都是十分致命的问题，特别是自学。&lt;/p&gt;
&lt;p&gt;将问题归结到环境上并不是推卸责任，计算机这个行业本身就是一种高度依赖环境且需要持续浸淫的的东西，没有日积月累的沉淀与深耕是不可能有真正意义上技术成果的（实际上大部分领域都是这个道理，但是计算机领域介于其学习资源获取方式的特殊性，相较其他领域或许两极分化更加明显），这是基于我一年以来对身边技术朋友的观察得出的结论。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;针对外因，只要学习积极性不变且有一台（可联网的）计算机可以操作，其影响会随着经验的积累而逐渐减弱。自高考结束后，“中式教育”的高压约束不复存在——相反，这时我的父母反而会十分支持我，哪怕我没有成为他们希望的模样。已经流逝的时间无法挽回，与成为真正大佬的差距现在只能靠在日常多花数倍的时间沉淀来弥补&lt;/p&gt;
&lt;p&gt;简单来说，&lt;strong&gt;高考结束后，外因也就转化为内因了&lt;/strong&gt;，即条件/环境与学习需求的矛盾转化为了自身学习能力与期望效率之间的矛盾，但前提是校内学业压力的可控，否则学业问题会消耗很多时间。&lt;/p&gt;
&lt;p&gt;事实上，这幅图主要还是聚焦于“内因”的分析，同时还有一个类似&lt;strong&gt;递归&lt;/strong&gt;的节点关系——这点我没有处理好，导致其有点难以理解：&lt;/p&gt;
&lt;p&gt;注意图中有一个名为“内因”的节点&lt;code&gt;G&lt;/code&gt;，与我们所言的内因实际上是一个东西，可以简单将其视为&lt;strong&gt;除外因（&lt;code&gt;F&lt;/code&gt;）节点外，对图中其他所有节点的封装&lt;/strong&gt;——它的位置与关系或许不恰当，但它想要说明的问题是：&lt;strong&gt;内因综合在一起本身就会加剧学习/信息整合能力低下的问题，而且由于学习积极性高涨，学习需求强烈，后者又会加剧前者中“内耗式学习”与“急于求成”的问题，从而陷入一个巨大的恶性循环&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;现在注意力来到这幅图抽象出的“最本质”的问题，即分属于两个核心问题的四大矛盾：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;学习规划上具体方向不明确&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;学习需求与个人认知之间的矛盾（因果）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;信息过载与有效筛选之间的矛盾（因果）&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;学习进程上急于求成&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;个人实际能力与期望能力之间的矛盾（因果）&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;学习行为与学习规律之间的矛盾（原理）&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;现在就不难发现，所谓的“左倾”，指的是&lt;strong&gt;在学习进程上急于求成&lt;/strong&gt;，而忽略了个人的实际能力；另外，缺少高效的信息整合方法也是这一年以来学习方法问题上巨大的痛点，但这也需要在漫长的学习过程中总结转化，与“急于求成”的学习行为也是矛盾的。&lt;/p&gt;
&lt;p&gt;至于学习规划上的问题，两个矛盾甚至是问题本身的指向就已经十分明确了，一是缺乏认知；二是未能高效、合理地筛选信息——这就回到刚刚说的个人能力的问题了，也需要时间进行学习转化。&lt;/p&gt;
&lt;p&gt;值得庆幸的是，经过一年以来的摸爬滚打，对于学习规划上的问题，我已经积累了足够的经验，以至于我在写这篇复盘前的一周便彻底明确了自己的努力方向，这在&lt;a href=&#34;#6%E6%9C%88%E4%BB%BD&#34;&gt;做了什么&lt;/a&gt;中也有所提及。&lt;/p&gt;
&lt;p&gt;至于“急于求成”的问题，抛弃不切实际的幻想，脚踏实地走好每一步是最核心的解决方式，同时还需要与后面的提到的几个问题相结合——&lt;a href=&#34;#%E5%AD%A6%E4%B9%A0%E8%BF%87%E7%A8%8B%E4%B8%AD%E9%9A%BE%E4%BB%A5%E9%9D%99%E5%BF%83&#34;&gt;静心学习&lt;/a&gt;、&lt;a href=&#34;#%E6%9C%AA%E8%83%BD%E6%B8%85%E6%99%B0%E5%88%92%E5%88%86%E5%AD%A6%E4%B8%8E%E7%8E%A9%E7%9A%84%E7%95%8C%E9%99%90&#34;&gt;“玩”与“学”的边界&lt;/a&gt;。&lt;/p&gt;
&lt;h4 id=&#34;时间实际利用率低&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#时间实际利用率低&#34;&gt;&lt;/a&gt; 时间实际利用率低&lt;/h4&gt;
&lt;p&gt;这个问题除了上面所说的“效率问题”，还有一部分是作息安排上的问题&lt;/p&gt;
&lt;p&gt;作息不规律导致的时间浪费也是一年以来学习规划上的痛点，同时我的身体健康也因此受到了不小的影响&lt;/p&gt;
&lt;h4 id=&#34;学习过程中难以静心&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#学习过程中难以静心&#34;&gt;&lt;/a&gt; 学习过程中难以静心&lt;/h4&gt;
&lt;p&gt;这个问题除了上面图中所说的“急于求成”以外，还有一个原因就是我玩心本来就挺重的（“玩心”这种东西懂的都懂😋），对于自己感兴趣的领域，我总是喜欢“超前”地了解些新东西。&lt;/p&gt;
&lt;p&gt;对于这个问题，辨证地看待它不难发现，它在我刚开始自学的那段时间客观上促进了我摆脱“跟班式”学习的陷阱；然而随着学习进程的推进与日益增长的信息量，这个问题对我的影响开始由利转弊了——它开始成为我高效学习与整合信息的障碍（&lt;a href=&#34;https://www.bilibili.com/video/BV1sFLMzJEgU/&#34;&gt;黄金替罪羊.jpg&lt;/a&gt;）。有意思的是，这个问题在我高考前的应试教育学习阶段也是一个十分突出的问题，只不过当年的我还是太年轻，没有及时系统分析自己在学习方法上存在的问题。&lt;/p&gt;
&lt;p&gt;对于现阶段如何解决这个阻碍，除了下文提到的&lt;a href=&#34;#%E6%9C%AA%E8%83%BD%E6%B8%85%E6%99%B0%E5%88%92%E5%88%86%E5%AD%A6%E4%B8%8E%E7%8E%A9%E7%9A%84%E7%95%8C%E9%99%90&#34;&gt;学与玩的边界&lt;/a&gt;外，还可以专门腾出一部分时间“顺其自然”，把它当作是一种“预习”——将这个行为利用起来，而不是尝试去克制、抹杀它。对于源于本性的问题，想要在短期内快速解决，“大禹治水”式的方式是最合适的。但仍需注意时间安排的问题，或是说是一种“划分”问题——这就与&lt;a href=&#34;#%E6%9C%AA%E8%83%BD%E6%B8%85%E6%99%B0%E5%88%92%E5%88%86%E5%AD%A6%E4%B8%8E%E7%8E%A9%E7%9A%84%E7%95%8C%E9%99%90&#34;&gt;下文&lt;/a&gt;联系起来了。&lt;/p&gt;
&lt;h3 id=&#34;实践方面&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#实践方面&#34;&gt;&lt;/a&gt; 实践方面&lt;/h3&gt;
&lt;h4 id=&#34;闭门造车&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#闭门造车&#34;&gt;&lt;/a&gt; “闭门造车”&lt;/h4&gt;
&lt;p&gt;主要问题是在开发实践中脱离实际，过度“独立”，团队协作意识薄弱，团队协作开发技能（如Git分支相关操作、代码审计等）能力低下&lt;/p&gt;
&lt;p&gt;一部分的原因大概就是因为我在转专业前不是计算机专业的学生，离我最近的那些人都没有技术意识吧。总而言之就是缺少那种氛围，周围几乎没有人能和我协同学习或搞开发。&lt;/p&gt;
&lt;h4 id=&#34;未能清晰划分学与玩的界限&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#未能清晰划分学与玩的界限&#34;&gt;&lt;/a&gt; 未能清晰划分“学”与“玩”的界限&lt;/h4&gt;
&lt;p&gt;这个虽然是前面分析&lt;a href=&#34;#%E4%B8%80%E7%B3%BB%E5%88%97%E5%B7%A6%E5%80%BE%E9%94%99%E8%AF%AF%E5%AF%BC%E8%87%B4%E7%9A%84%E8%BF%9E%E9%94%81%E5%8F%8D%E5%BA%94&#34;&gt;一系列“左倾”错误&lt;/a&gt;时那副关系图中提到的一个节点问题，但我认为有必要就学习规划的角度将其拿出来讲一讲。&lt;/p&gt;
&lt;p&gt;“玩”与“学”的关系其实是很微妙的：在技术领域（其他领域我不知道），二者可以相得益彰，但也可以“相克相制”，取决于规划的方式与规划者的自制力。倘若&lt;strong&gt;玩的东西的实际意义不大&lt;/strong&gt;或是&lt;strong&gt;与“学”的关联性较低&lt;/strong&gt;，那么这种“玩”就与学无益——最多提供些情绪价值。&lt;/p&gt;
&lt;p&gt;对于我过去一年以来的经历，前者的占比似乎不大，这是效率上的问题；而后者就有“好高骛远”的嫌疑，这也和前面的分析一致。&lt;/p&gt;
&lt;p&gt;解决方法有两个：一是在学某个模块的内容时专注于“玩”这个模块的内容；二是彻底分割二者的关系。两种方法各有利弊，前者专注而略显枯燥、后者灵活而略显低效。对于后者，还有一个“改良版”——结合两者的特征，同时存在两个“玩”的内容。因为仍需划分“学”与“玩”，故本质上还是后者，且对规划能力与自制力的要求高。&lt;/p&gt;
&lt;h2 id=&#34;经验总结&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#经验总结&#34;&gt;&lt;/a&gt; 经验总结&lt;/h2&gt;
&lt;p&gt;其实前文都总结得差不多了，不过这里还有两个经验需要补充：&lt;/p&gt;
&lt;h3 id=&#34;一个在明确自己努力方向时的发现&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#一个在明确自己努力方向时的发现&#34;&gt;&lt;/a&gt; 一个在&lt;em&gt;明确自己努力方向时&lt;/em&gt;的发现&lt;/h3&gt;
&lt;p&gt;在分析部分互联网大厂的JD时，我发现校招的任职要求更多指向&lt;strong&gt;计算机基础知识&lt;/strong&gt;，而社招才更加注重&lt;strong&gt;工程或业务能力&lt;/strong&gt;。那么我们不妨大胆推测——对于像我这样高考结束后才开始接触技术而缺乏技术沉淀的人，扎实的计算机基础或许才是更加稳妥的大厂敲门砖。&lt;/p&gt;
&lt;p&gt;同时，二者的侧重点的差异在学习规划（对症下药）上也是一个互补的参考：对于同类岗位，校招JD天然地适合用于基础学习的参考；而社招JD就适合工程/业务能力的学习规划以及相关项目的参考。&lt;/p&gt;
&lt;p&gt;另外，校招过程中HR似乎对学历的重视程度较高，对于我们这种 &lt;s&gt;建专&lt;/s&gt; 水平较为一般的院校，在初筛就被投入“人（la）才（ji）库（tong）”的风险显然要比双一流与92高；又因为缺少技术沉淀的时间，想靠优秀项目破局的希望也很渺茫。这时就需要考虑是通过考研提升自己在学历上的竞争力、同时 &lt;s&gt;多走三五年的弯路&lt;/s&gt; 为自己争取到多那么三五年的沉淀时间；还是通过竞赛奖项来破局。但想要在竞赛上获得比较明显的优势，往往需要花费大量的时间备战。这是一个值得思考与权衡的问题。&lt;/p&gt;
&lt;h3 id=&#34;站点构建工具与主题的选择&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#站点构建工具与主题的选择&#34;&gt;&lt;/a&gt; 站点构建工具与主题的选择&lt;/h3&gt;
&lt;p&gt;这是在通过搭建个人站点来整合信息时总结得出的经验，对于我这样的初学者也是一个容易走弯路的地方，我在这个地方至少“浪费”了近一个月的时间。&lt;/p&gt;
&lt;p&gt;长话短说，首先来看一些工具——我目前调研过的构建工具有四个：&lt;a href=&#34;https://hugo.opendocs.io/&#34;&gt;Hugo&lt;/a&gt;、&lt;a href=&#34;https://hexo.io/zh-cn/&#34;&gt;Hexo&lt;/a&gt;、&lt;a href=&#34;https://squidfunk.github.io/mkdocs-material/&#34;&gt;Material for MkDocs&lt;/a&gt;和&lt;a href=&#34;https://vuepress.vuejs.org/zh/&#34;&gt;VuePress&lt;/a&gt;，其中前面三个我都用过，第四个简单看了一下。&lt;/p&gt;
&lt;p&gt;我个人的建议是，针对&lt;strong&gt;博客&lt;/strong&gt;等&lt;strong&gt;非信息密集型&lt;/strong&gt;且&lt;strong&gt;注重美观&lt;/strong&gt;的文档或站点，可以使用前两个构建；同时，Hexo会比Hugo更加成熟一些，大部分第三方主题对前者的支持会更好，但是容易出现依赖问题，且可能需要手动解决。因此建议小白用Hugo，有一定经验了再迁移到Hexo。&lt;/p&gt;
&lt;p&gt;而对于类似&lt;strong&gt;学习笔记&lt;/strong&gt;这样&lt;strong&gt;结构复杂&lt;/strong&gt;的&lt;strong&gt;信息密集型&lt;/strong&gt;文档，建议使用Material for Mkdocs（一个基于&lt;a href=&#34;https://www.mkdocs.org/&#34;&gt;Mkdocs&lt;/a&gt;的&lt;strong&gt;主题&lt;/strong&gt;，后面所提到的&lt;a href=&#34;https://www.mkdocs.org/dev-guide/plugins/#developing-plugins&#34;&gt;支持PyPI集成&lt;/a&gt;是指可利用其进行插件开发）。其社区支持十分完善，且支持&lt;a href=&#34;https://pypi.org/project/mkdocs-material/&#34;&gt;PyPI集成&lt;/a&gt;，可通过自行编写Python插件自定义样式。&lt;a href=&#34;https://csdiy.wiki/&#34;&gt;csdiy&lt;/a&gt;就是使用其构建的一个站点。&lt;/p&gt;
&lt;p&gt;VuePress我倒是没使用过，不过通过观察使用其构建的文档，我个人认为它适合用于构建结构相对没那么复杂的&lt;strong&gt;单主题&lt;/strong&gt;的&lt;strong&gt;信息密集型&lt;/strong&gt;文档，如某个中大型项目的使用文档。&lt;/p&gt;
&lt;h2 id=&#34;新的开始&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#新的开始&#34;&gt;&lt;/a&gt; 新的开始&lt;/h2&gt;
&lt;p&gt;新的学年，不出意外的话，我就是网安专业的学生了。&lt;s&gt;芜湖～水课水课逃逃逃！😋&lt;/s&gt;&lt;/p&gt;
&lt;p&gt;在大二，计算机的基础学习与竞赛或许会成为我的主旋律。在《葬送的芙莉莲》中，魔法使&lt;a href=&#34;https://zh.moegirl.org.cn/%E5%85%B0%E6%89%98&#34;&gt;兰托&lt;/a&gt;在一级魔法使选拔考试上曾对自己的对手说过这样一句话：&lt;strong&gt;大部分自学成才的人基础都不够扎实&lt;/strong&gt;——希望能够成为剩下的那小部分人。&lt;/p&gt;
&lt;p&gt;对于基础学习，重点放在&lt;strong&gt;操作系统&lt;/strong&gt;与&lt;strong&gt;计算机网络&lt;/strong&gt;及二者的延伸内容（如分布式系统、并发等）上，最好能手搓一个内核和TCP/IP协议栈。我总有一种感觉，就是我目前的实际开发能力极其低下的一个很重要的原因就是对操作系统的原理几乎完全不了解。&lt;/p&gt;
&lt;p&gt;最好能把“程序员的三大浪漫”（操作系统、编译原理、计算机图形学）也过一遍。&lt;/p&gt;
&lt;p&gt;另外，在新的学年快要结束之际——明年的这个时候，需要根据基础学习的进度与状态决定&lt;a href=&#34;#%E4%B8%80%E4%B8%AA%E5%9C%A8%E6%98%8E%E7%A1%AE%E8%87%AA%E5%B7%B1%E5%8A%AA%E5%8A%9B%E6%96%B9%E5%90%91%E6%97%B6%E7%9A%84%E5%8F%91%E7%8E%B0&#34;&gt;是否需要备战考研&lt;/a&gt;，但要尽量避开这个方向——我是真的不太擅长考试且极度厌恶死记硬背。&lt;/p&gt;
&lt;p&gt;当然，工程/业务能力也要尽可能不落下，特别是这学期分外重视的&lt;strong&gt;项目标准化&lt;/strong&gt;——当然，我这里想表达的东西或许还有一个更专业的术语——&lt;strong&gt;软件工程&lt;/strong&gt;。&lt;/p&gt;
&lt;hr /&gt;
&lt;p&gt;&lt;em&gt;END&lt;/em&gt;&lt;/p&gt;
&lt;div style=&#34;text-align: right;&#34;&gt;
  -- virtualguard101，2025.6.23凌晨于福建理工大学
&lt;/div&gt;
 ]]></description>
        </item>
    </channel>
</rss>
