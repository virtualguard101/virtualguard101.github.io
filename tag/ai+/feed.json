{
    "version": "https://jsonfeed.org/version/1",
    "title": "virtualguard's Blog • All posts by \"ai+\" tag",
    "description": "</>",
    "home_page_url": "http://blog.virtualguard101.xyz",
    "items": [
        {
            "id": "http://blog.virtualguard101.xyz/2025/08/16/cursor-meetup-shanghai/",
            "url": "http://blog.virtualguard101.xyz/2025/08/16/cursor-meetup-shanghai/",
            "title": "Cursor Meetup ShangHai 要点记录：学生视角下的 AI+ 产品",
            "date_published": "2025-08-16T06:00:00.000Z",
            "content_html": "<p><strong>在朋友的邀请下参加了8月16号在上海浦东软件园举行的 Cursor Meetup，对朋友现场记录的内容以及我的个人提问做一个整理，同时站在计算机专业在校大学生视角简单记录一下当前的看法</strong></p>\n<p>整个 Meetup 的流程持续了一整个下午，分上下两场，个人感觉上半场更倾向于实际应用场景的“踩坑”分享，而下半场则更倾向于方法论的解析。</p>\n<p>站在学生视角，前半场的实际应用场景我个人基本无法很好消化，毕竟还没有参与工作，没有这样的环境与条件去感受这一方面的内容；但方法论模块的分享对于当前的我们来说还是很有参考价值的，无论是我的朋友（医学生）还是我（CSer），特别是针对未来大概率要进入这个行业的我而言。</p>\n<p>现场绝大多数的与会者都已经参与工作，其中也不乏各单位中的技术领头羊，这也给了迷茫的我提问的机会。</p>\n<!-- more -->\n<p>活动议程如下图：</p>\n<p><img src=\"https://i.imgur.com/Y9YnmBu.jpeg\" alt=\"\" /></p>\n<h2 id=\"kiro-ide简介及新一代ai编程方案\"><a class=\"markdownIt-Anchor\" href=\"#kiro-ide简介及新一代ai编程方案\"></a> Kiro IDE简介及新一代AI编程方案</h2>\n<blockquote>\n<p>Calvin | AWS Startup</p>\n</blockquote>\n<p>纯AI有不编程少问题，解决方案<br />\n规范驱动的开发 : Spec Mode</p>\n<p>示例：Kiro IDE</p>\n<ul>\n<li>Spec Mode ： 先写规范再编码</li>\n<li>Agent Hook： 比如保存文件的时候调用AI检查代码</li>\n<li>Vibe： 互动问答为核心</li>\n<li>Spec：严格按照软件工程的需求</li>\n</ul>\n<h2 id=\"v0-cursor-实战开发\"><a class=\"markdownIt-Anchor\" href=\"#v0-cursor-实战开发\"></a> v0 + cursor 实战开发</h2>\n<blockquote>\n<p>陆彦达 | 飞书深诺研发总监</p>\n</blockquote>\n<p>借助V0快速完成原型开发，对其需求即可</p>\n<p>把原型丢给前端和Cursor，让cursor补全</p>\n<p>再让cursor生成配套后端（比如swagger）</p>\n<p>Cursor不是很适合超大项目和上古项目，但很适合简单项目/中小型项目从零开始开发</p>\n<p>架构的设计以及rule很重要</p>\n<!-- \n!!! question\n    我不是专业开发者，之前用Cursor等AI工具做过一些玩具，但是我让Cursor写了一个原型之后，想要重构的时候发现代码经常会相当混乱，让Cursor自己改，可能也会出现前改后忘这类的情况（比如我要重构一个函数，Cursor写了一个新的函数，调用老函数再做一些额外处理），此类情况有什么对策\n\n    我不是专业开发者，之前用Cursor等AI工具做过一些玩具，我让Cursor做一个原型，一路点点点确实做出了要的效果，但是这时候代码就变得复杂的超出了我的理解能力，就让我的重构比较难受\n -->\n<p>Cursor的开发 轻逻辑轻算法，重顶层和架构设计</p>\n<p>效果 Python, Typescript &gt; Java</p>\n<h2 id=\"cursor-memories\"><a class=\"markdownIt-Anchor\" href=\"#cursor-memories\"></a> Cursor Memories</h2>\n<blockquote>\n<p>好记星 | 前得物增长前端负责人</p>\n</blockquote>\n<p>记忆本身就是一种规则</p>\n<p>索引的记忆数量有限制(最新100条)</p>\n<p>未来的策略：</p>\n<ul>\n<li>\n<p>增加一个找回策略</p>\n</li>\n<li>\n<p>团队协作</p>\n</li>\n</ul>\n<p>记忆其实就是用户对于项目/仓库的认知</p>\n<p>最佳实践：</p>\n<ul>\n<li>\n<p>可保存的记忆：记住我是医学生/开源爱好者/见习开发者</p>\n</li>\n<li>\n<p>用户洞察：根据聊天记录提取记忆</p>\n</li>\n<li>\n<p>聊天记录会议：我们之前聊过这个事情</p>\n</li>\n</ul>\n<p>有意思的Cursor插件：Spec Story</p>\n<h2 id=\"mcp\"><a class=\"markdownIt-Anchor\" href=\"#mcp\"></a> MCP</h2>\n<blockquote>\n<p>孟健 | AI 畅销书作者</p>\n</blockquote>\n<p>感觉就是通用的Function Call协议，主要价值是标准化</p>\n<p>MCP暂时还在早期阶段，未来是Agent to Agent(A2A)协议</p>\n<p>国内MCP的生态发展一般，正在努力发展的生态 ：<a href=\"https://www.mcp-cn.com/\">MCP Hub</a></p>\n<blockquote>\n<p>Claude Code 团队：AI Coding将来会覆盖90%+的编码场景</p>\n</blockquote>\n<p>Agent编程，提示词要精准，方便AI理解的，所以说AI无法抢走你的工作🤓</p>\n<p>什么服务可以MCP化：AI本来是缺少这个能力的，要接入外部工具提升能力。有缺口就可以用MCP补全</p>\n<h2 id=\"如何用ai开发出-github-43k的产品\"><a class=\"markdownIt-Anchor\" href=\"#如何用ai开发出-github-43k的产品\"></a> 🤩如何用AI开发出 Github 4.3k的产品</h2>\n<blockquote>\n<p><img src=\"https://i.imgur.com/zqTVwll.jpeg\" alt=\"\" /></p>\n<p><a href=\"https://github.com/pftom\">黄巍/Tom Huang</a> | <a href=\"https://github.com/refly-ai/refly\">Refly</a> AI Founder &amp; CEO</p>\n<p>针对一个在校大学生兼 <s>开源社区混子</s> 开源爱好者的<strong>我们</strong>来说，这很有用！</p>\n</blockquote>\n<h3 id=\"方法论分享\"><a class=\"markdownIt-Anchor\" href=\"#方法论分享\"></a> 方法论分享</h3>\n<p>Refly AI :</p>\n<ul>\n<li>\n<p>两周完成上线</p>\n</li>\n<li>\n<p>生产级别可用</p>\n</li>\n<li>\n<p>4.3k star</p>\n</li>\n<li>\n<p>早于Notebook LM 约 3-5个月</p>\n</li>\n</ul>\n<p>一些阶段：</p>\n<ol>\n<li>\n<p>洪荒时代</p>\n</li>\n<li>\n<p>忽然有一天发现所有代码都可以用AI来写了（产品经理活的最滋润的一集）</p>\n</li>\n<li>\n<p>Coding Agent加速 (Codeium -&gt; Windsurf)</p>\n</li>\n<li>\n<p>Coding Agent像水电一样平常后，会发生什么</p>\n</li>\n</ol>\n<blockquote>\n<p>做产品不能闭门造车</p>\n</blockquote>\n<p><strong>AI+ Dev</strong>对Starup和大厂差距的影响：</p>\n<ul>\n<li>\n<p><strong>信息差</strong>：AI 搜索 -&gt; 抹平信息差</p>\n</li>\n<li>\n<p><strong>开发速度</strong>：AI Coding -&gt; 代码补全时代</p>\n</li>\n</ul>\n<p>极致的生产力使得初创公司也能具有挑战百度自由画布的底气，可以<strong>说干就干</strong></p>\n<!-- > 吐槽百度：出了名的想法超前，执行力拉胯 -->\n<blockquote>\n<p><strong>技术实现边际成本为 0 后，如何做选择，或者说『品味』就变得尤为重要</strong></p>\n</blockquote>\n<p>AI产品的价值：不仅可以帮你完成工作，还可能让你充满信心——不仅仅局限于Coding，也可以是你的生活与工作伙伴。</p>\n<p>产品选择：不要攻打别人的腹地，看看产品之间有什么可用的空隙你可以参与</p>\n<p><img src=\"https://i.imgur.com/zTYrumE.jpeg\" alt=\"\" /></p>\n<h3 id=\"个人提问\"><a class=\"markdownIt-Anchor\" href=\"#个人提问\"></a> 个人提问</h3>\n<blockquote>\n<p>作为一个近期遭遇学习瓶颈（主要体现在基础学习、方向选择上）的在校大学生，<strong>我</strong>深感焦虑，我参与此次 Meetup 的目的更多的也是想了解一些<strong>AIGC/AI+<strong>对当前计算机行业</strong>生产方式</strong>发展趋势的影响，以更好地思考近期的规划同时抉择自己的钻研方向</p>\n</blockquote>\n<blockquote>\n<p><em>以下对话为个人要点回顾，与实际对话可能有所差异</em></p>\n</blockquote>\n<ul>\n<li>\n<p><strong>Q</strong> (<em>virtualguard101</em>):</p>\n<p>在刚刚的分享中，您提到了 AI+ 产品能够使得研发进程具备极致的生产效率，那么作为一个已经参与工作的开发者，您认为计算机基础知识的学习还有必要吗？</p>\n</li>\n<li>\n<p><strong>A</strong> (<em>Tom Huang</em>):</p>\n<p>还是有必要的，至少大学校园中提供的基础课程还是需要掌握的。<strong>AI+ 产品只是一个生产工具</strong>，扎实的理论基础才能够使得你具备高效利用它的能力，根据马斯克曾提到的<a href=\"https://www.mbachina.com/html/FMBA2012/202202/412585.html\">第一性原理</a>也不难得出这个结论。</p>\n</li>\n</ul>\n<hr />\n<ul>\n<li>\n<p><strong>Q</strong> (<em>virtualguard101</em>):</p>\n<p>假设我的主攻方向是 DevOps，我的工作有可能被AI+取代吗？</p>\n</li>\n<li>\n<p><strong>A</strong> (<em>Tom Huang</em>):</p>\n<p><s>好像还真有可能😂</s>，不过要知道，AI 的底层是一个概率模型，概率模型最大的特点就是具有<strong>不稳定性</strong>，因此在对稳定性或高精度的任务中，AI 就很难发挥主导作用了——举个例子：在今天的分享中，不难发现当前 AI 在前端开发中的应用程度要比其他领域（如后端）高出不少，这就是因为前端的产品可预览、容错度高，且比较容易发现问题；假设我们将场景切换到后端开发、服务器开发、DevOps等综合度较高的场景，一个小小的错误就有可能使得整个系统崩溃，那么这时 AI 能发挥的作用就非常有限了，还是需要人工不断地改进系统。这时能否更加高效地利用 AI+ <strong>工具</strong>来处理业务需求或解决各式各样的运维问题就是区分普通运维与“新时代”运维的一个重要指标了。</p>\n</li>\n</ul>\n<hr />\n<ul>\n<li>\n<p><strong>Q</strong> (<em>virtualguard101</em>):</p>\n<p>当前 AI 领域的快速发展与迭代，使得我时常陷入类似于“我当前的学习是否还具有实际意义”等问题的思考，导致我十分迷茫与焦虑，有什么办法能缓解这种情况吗？</p>\n</li>\n<li>\n<p><strong>A</strong> (<em>Tom Huang</em>):</p>\n<p>在学习的过程中伴随一些<strong>产出</strong>，不论这个产出的形式、托管平台等要素，只要它具有实际意义，那么就能很大程度上缓解你的焦虑——另外如果你的产出能被他人所认可，我想这也会使你产生极大的慰藉（作为一个开源爱好者，这点我是真的感同身受）；同时，回到刚刚说的 AI+ 产品也可以在这个过程中为你提供很多帮助，包括但不限于帮助你掌握扎实的基础理论，即 作为你的一个<strong>学习与生活的伙伴</strong>。</p>\n</li>\n</ul>\n<h2 id=\"ai时代的个人战略\"><a class=\"markdownIt-Anchor\" href=\"#ai时代的个人战略\"></a> ⭐AI时代的个人战略</h2>\n<blockquote>\n<p>魏知 | 金融科技公司 AI 企业转型项目负责人</p>\n</blockquote>\n<blockquote>\n<p>这一模块我的朋友没有记录，同时我自己也没有认真听，但作为未来要踏入这个行业的“准社畜”而言，我认为这个模块分享的方法论对我而言还是挺有参考价值的，故将在现场拍摄的照片列出以供回顾</p>\n</blockquote>\n<p><img src=\"https://i.imgur.com/WX5HG9Y.jpeg\" alt=\"\" /></p>\n<p><img src=\"https://i.imgur.com/rvZyPF8.jpeg\" alt=\"\" /></p>\n<p><img src=\"https://i.imgur.com/3xrTVmB.jpeg\" alt=\"\" /></p>\n<p><img src=\"https://i.imgur.com/n6rFOO4.jpeg\" alt=\"\" /></p>\n<p><img src=\"https://i.imgur.com/wgHTSAP.jpeg\" alt=\"\" /></p>\n<p><img src=\"https://i.imgur.com/ToyH1Ma.jpeg\" alt=\"\" /></p>\n<p>在当前发展阶段，大多数企业还处于<strong>第一阶段</strong>，部分头部企业已经发展至<strong>第二阶段</strong>，但还没有人敢说自己的企业已经发展至<strong>第三阶段</strong>。</p>\n<h2 id=\"qa\"><a class=\"markdownIt-Anchor\" href=\"#qa\"></a> Q&amp;A</h2>\n<p>防幻觉的rule：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">confidence</span>:int</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> confidence &gt;= <span class=\"number\">95</span>:</span><br><span class=\"line\">  <span class=\"title function_\">answer</span>()</span><br><span class=\"line\"><span class=\"attr\">else</span>: ask-me-<span class=\"title function_\">questions</span>()</span><br></pre></td></tr></table></figure>\n<p>把大的任务分解为sub tasks</p>\n<p>避免Vibe debug异常痛苦🤣</p>\n<ul>\n<li>\n<p>定一个清晰的需求</p>\n</li>\n<li>\n<p>对于大的需求，设置一个好的rules，让AI按模块开发</p>\n</li>\n<li>\n<p>Spec-mode防止效果和需求便宜过大</p>\n</li>\n<li>\n<p>init的时候写一些 basic rules： 基本的代码风格，模块设置等</p>\n</li>\n<li>\n<p>debug workflow:</p>\n<ul>\n<li>\n<p><strong>讨论</strong>：做了什么- 期待结果- 实际结果- 一些日志，报错等</p>\n</li>\n<li>\n<p><strong>规划</strong>：要如何处理这些问题</p>\n</li>\n<li>\n<p><strong>Action</strong>：让AI写</p>\n</li>\n</ul>\n</li>\n</ul>\n<blockquote>\n<p>相当于「AI 结对编程」，而不是「老板甩给员工 debug」</p>\n</blockquote>\n<p>及时删除冗余代码</p>\n<p>一个问题一个问题解决，不要设定过于宏大的任务</p>\n",
            "tags": [
                "AI+",
                "Meetup"
            ]
        }
    ]
}